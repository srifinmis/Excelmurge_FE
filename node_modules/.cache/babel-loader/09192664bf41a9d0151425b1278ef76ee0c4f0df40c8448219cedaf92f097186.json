{"ast":null,"code":"var _jsxFileName = \"D:\\\\Excel-Project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file1, setFile1] = useState(null);\n  const [file2, setFile2] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file1 || !file2) return alert(\"Please upload both files\");\n    const formData = new FormData();\n    formData.append('file1', file1);\n    formData.append('file2', file2);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'matched_output.xlsx');\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      alert('Error processing files');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Srifin Excel Tool to Merge Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"(LMS File): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile1(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"File 2 (Zing HR File): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile2(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload & Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uRM9TzlhoRMeqFoazzrbtsUH5E8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file1","setFile1","file2","setFile2","handleSubmit","e","preventDefault","alert","formData","FormData","append","response","post","responseType","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","err","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","files","_c","$RefreshReg$"],"sources":["D:/Excel-Project/src/App.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [file1, setFile1] = useState(null);\n  const [file2, setFile2] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!file1 || !file2) return alert(\"Please upload both files\");\n\n    const formData = new FormData();\n    formData.append('file1', file1);\n    formData.append('file2', file2);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        responseType: 'blob',\n      });\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'matched_output.xlsx');\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      alert('Error processing files');\n    }\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Srifin Excel Tool to Merge Files</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>(LMS File): </label>\n          <input type=\"file\" onChange={e => setFile1(e.target.files[0])} />\n        </div>\n        <div>\n          <label>File 2 (Zing HR File): </label>\n          <input type=\"file\" onChange={e => setFile2(e.target.files[0])} />\n        </div>\n        <button type=\"submit\">Upload & Match</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}