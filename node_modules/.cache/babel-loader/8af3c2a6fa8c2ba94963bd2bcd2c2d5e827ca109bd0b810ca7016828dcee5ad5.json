{"ast":null,"code":"\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   const [file1, setFile1] = useState(null);\n//   const [file2, setFile2] = useState(null);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!file1 || !file2) return alert(\"Please upload both files\");\n\n//     const formData = new FormData();\n//     formData.append('file1', file1);\n//     formData.append('file2', file2);\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/upload', formData, {\n//         responseType: 'blob',\n//       });\n\n//       const url = window.URL.createObjectURL(new Blob([response.data]));\n//       const link = document.createElement('a');\n//       link.href = url;\n//       link.setAttribute('download', 'matched_output.xlsx');\n//       document.body.appendChild(link);\n//       link.click();\n//     } catch (err) {\n//       alert('Error processing files');\n//     }\n//   };\n\n//   const containerStyle = {\n//     maxWidth: '500px',\n//     margin: '50px auto',\n//     padding: '30px',\n//     borderRadius: '12px',\n//     background: '#f9f9f9',\n//     boxShadow: '0 4px 20px rgba(0, 0, 0, 0.4)',\n//     fontFamily: 'Arial, sans-serif',\n//   };\n\n//   const headingStyle = {\n//     textAlign: 'center',\n//     marginBottom: '20px',\n//     color: '#333',\n//   };\n\n//   const inputGroup = {\n//     marginBottom: '15px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//   };\n\n//   const labelStyle = {\n//     marginBottom: '8px',\n//     fontWeight: 'bold',\n//   };\n\n//   const inputStyle = {\n//     padding: '8px',\n//     border: '1px solid #ccc',\n//     borderRadius: '6px',\n//   };\n\n//   const buttonStyle = {\n//     marginTop: '10px',\n//     padding: '10px 15px',\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '6px',\n//     cursor: 'pointer',\n//     fontWeight: 'bold',\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <h2 style={headingStyle}>Srifin Excel Merge Files</h2>\n//       <hr style={{ marginBottom: '30px' }} />\n//       <form onSubmit={handleSubmit}>\n//         <div style={inputGroup}>\n//           <label style={labelStyle}>LMS File:</label>\n//           <input type=\"file\" onChange={e => setFile1(e.target.files[0])} style={inputStyle} />\n//         </div>\n//         <div style={inputGroup}>\n//           <label style={labelStyle}>Zing-HR File:</label>\n//           <input type=\"file\" onChange={e => setFile2(e.target.files[0])} style={inputStyle} />\n//         </div>\n//         <div style={{ display: 'flex', justifyContent: 'center' }}>\n//           <button type=\"submit\" style={buttonStyle}>Merge and Download</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["D:/Excel-Project/src/App.js"],"sourcesContent":["\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   const [file1, setFile1] = useState(null);\n//   const [file2, setFile2] = useState(null);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!file1 || !file2) return alert(\"Please upload both files\");\n\n//     const formData = new FormData();\n//     formData.append('file1', file1);\n//     formData.append('file2', file2);\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/upload', formData, {\n//         responseType: 'blob',\n//       });\n\n//       const url = window.URL.createObjectURL(new Blob([response.data]));\n//       const link = document.createElement('a');\n//       link.href = url;\n//       link.setAttribute('download', 'matched_output.xlsx');\n//       document.body.appendChild(link);\n//       link.click();\n//     } catch (err) {\n//       alert('Error processing files');\n//     }\n//   };\n\n//   const containerStyle = {\n//     maxWidth: '500px',\n//     margin: '50px auto',\n//     padding: '30px',\n//     borderRadius: '12px',\n//     background: '#f9f9f9',\n//     boxShadow: '0 4px 20px rgba(0, 0, 0, 0.4)',\n//     fontFamily: 'Arial, sans-serif',\n//   };\n\n//   const headingStyle = {\n//     textAlign: 'center',\n//     marginBottom: '20px',\n//     color: '#333',\n//   };\n\n//   const inputGroup = {\n//     marginBottom: '15px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//   };\n\n//   const labelStyle = {\n//     marginBottom: '8px',\n//     fontWeight: 'bold',\n//   };\n\n//   const inputStyle = {\n//     padding: '8px',\n//     border: '1px solid #ccc',\n//     borderRadius: '6px',\n//   };\n\n//   const buttonStyle = {\n//     marginTop: '10px',\n//     padding: '10px 15px',\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '6px',\n//     cursor: 'pointer',\n//     fontWeight: 'bold',\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <h2 style={headingStyle}>Srifin Excel Merge Files</h2>\n//       <hr style={{ marginBottom: '30px' }} />\n//       <form onSubmit={handleSubmit}>\n//         <div style={inputGroup}>\n//           <label style={labelStyle}>LMS File:</label>\n//           <input type=\"file\" onChange={e => setFile1(e.target.files[0])} style={inputStyle} />\n//         </div>\n//         <div style={inputGroup}>\n//           <label style={labelStyle}>Zing-HR File:</label>\n//           <input type=\"file\" onChange={e => setFile2(e.target.files[0])} style={inputStyle} />\n//         </div>\n//         <div style={{ display: 'flex', justifyContent: 'center' }}>\n//           <button type=\"submit\" style={buttonStyle}>Merge and Download</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;"],"mappings":";AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}